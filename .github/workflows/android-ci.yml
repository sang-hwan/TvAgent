# .github/workflows/android-ci.yml
name: Android CI

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - uses: actions/checkout@v3

      # 2) JDK 17 (sdkmanager 실행 환경)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # 3) Install Android SDK components (compileSdk=35, buildTools=35.0.0, emulator+system-image)
      - name: Install Android SDK components
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        run: |
          sudo ln -s $ANDROID_SDK_ROOT/cmdline-tools/latest $ANDROID_SDK_ROOT/cmdline-tools/tools || true
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator:$PATH

          yes | sdkmanager --install \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0" \
            "emulator" \
            "system-images;android-31;default;x86_64"
          sdkmanager --licenses

      # 4) Start emulator via reactivecircus action (API 31, x86_64)
      - name: Run Android emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          arch: x86_64
          target: default
          emulator-options: -no-window -no-audio -no-boot-anim
          # unlock the device automatically
          script: adb shell input keyevent 82

      # 5) Cache Gradle
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}

      # 6) Build, Lint & Run Tests
      - name: Build, Lint & Run Tests
        run: ./gradlew clean build lint connectedCheck --stacktrace
