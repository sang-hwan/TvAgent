# .github/workflows/android-ci.yml
name: Android CI

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1) 코드 체크아웃
      - uses: actions/checkout@v3

      # 2) JDK 11 설치 (project의 compileOptions.sourceCompatibility = 11)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      # 3) Android SDK 설치
      - name: Install Android SDK components
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        run: |
          # 일부 러너에는 cmdline-tools/latest → tools 폴더가 없으므로 심볼릭 링크 만듦
          sudo ln -s $ANDROID_SDK_ROOT/cmdline-tools/latest $ANDROID_SDK_ROOT/cmdline-tools/tools || true
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH

          # compileSdk=35, buildTools=35.0.0 설치
          yes | sdkmanager --install \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0"

      # 4) Emulator 실행 (Instrumentation Test용, API 31)
      - name: Run Android emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          arch: x86_64
          target: default
          script: |
            # 에뮬레이터 부팅 대기
            adb wait-for-device
            adb shell input keyevent 82

      # 5) Gradle 캐시
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}

      # 6) 빌드 & 테스트 (unit, instrumentation 포함)
      - name: Build, Lint & Run Tests
        run: ./gradlew clean build lint connectedCheck --stacktrace
